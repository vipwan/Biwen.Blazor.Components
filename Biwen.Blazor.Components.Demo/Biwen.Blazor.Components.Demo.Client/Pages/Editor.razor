@page "/editor"
@rendermode InteractiveAuto

<PageTitle>Editor</PageTitle>

<FluentToastProvider MaxToastCount="10" />
<FluentDialogProvider />
<FluentTooltipProvider />

<FluentGrid>

    <FluentGridItem xs="12">

        <MarkdownEditor @ref="editor" Content="@md" UploadImage="true" UploadImagePath="/upload"></MarkdownEditor>
        <FluentButton @onclick="async()=>{await GetContent(); }" Appearance="Appearance.Accent">获取Content</FluentButton>
    </FluentGridItem>


    <FluentGridItem xs="12">

        <CodeEditor @ref="codeEditor" Language="csharp"></CodeEditor>
        <FluentButton @onclick="async()=>{await GetCode(); }" Appearance="Appearance.Accent">获取Code</FluentButton>

    </FluentGridItem>



</FluentGrid>

@code {

    [Inject]
    private IToastService ToastService { get; set; } = null!;

    private string md = "## Hello World";

    private MarkdownEditor editor = null!;
    private MarkdownEditor editor2 = null!;
    private CodeEditor codeEditor = null!;


    private async Task GetCode()
    {
        var content = codeEditor.Value;
        ToastService.ShowInfo(content!);
        await Task.CompletedTask;
    }


    private async Task GetContent()
    {
        var content = editor.Content;
        ToastService.ShowInfo(content!);
        await Task.CompletedTask;
    }

    private async Task GetContent2()
    {
        var content = editor2.Content;
        ToastService.ShowInfo(content!);
        await Task.CompletedTask;
    }


}
